[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "snsim"
authors = [{name = "Sebastian Arming", email = "sebastian@arming.net"}]
readme = "README.md"
classifiers = ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"]
dynamic = ["version", "description"]
requires-python = ">=3.6"
dependencies = [
    "bayesian-optimization >=1.1.0",
    "frozendict >=2.0.3",
    "mpi4py >=3.0.3",
    "networkx >=2.4",
    "numba <=0.53.1",
    "numpy >=1.19.5",
    "pandas >=1.0.5",
    "scipy >=1.5.3",
    "typing_extensions; python_version<'3.8'",
]

[project.scripts]
run = "snsim.propagation.run:main"
sub = "snsim.hpc.sub:main"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mypy",
]
dev = [
    "beni",
    "black",
    "ipython",
    "jupyterlab >=3.2",
    "matplotlib >=3.2.2",
    "plotnine >=0.8",
    "profilehooks >=1.12.0",
    "tox",
]
doc = ["sphinx"]

[project.urls]
Home = "http://github.com/sarming/propagation"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
requires = tox-conda
envlist = {py36,py39}-{openmpi,mpich}

[testenv]
conda_env =
    py36-openmpi: tests/env-py36-openmpi.yml
    py39-openmpi: tests/env-py39-openmpi.yml
    py36-mpich: tests/env-py36-mpich.yml
    py39-mpich: tests/env-py39-mpich.yml
conda_channel = conda-forge
conda_deps = py36: typing_extensions
setenv =  FLIT_NO_NETWORK = true
commands =
    pytest {posargs}
    mpiexec -n 2 bin/run sim neos_20201110 --outdir={envtmpdir}
"""

[tool.black]
line-length = 100
skip-string-normalization = true
